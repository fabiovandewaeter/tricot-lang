// cascade
/*
let d = 1
    <- add(1)
    <- add(1)
    <- yourself
*/

//===============================

// pipeline
/*
let player =
  Entity()
  |> add(Position(10, 5))
  |> add(Health(100, 100))
  |> yourself
*/

//===============================

/*
fn incr(a: &mut Int) {
    *a += 1
}
let mut a = 1
incr(&mut a)
print(a)
*/

//===============================

comp Position(x: Int, y: Int)
comp Velocity(dx: Int, dy: Int)

sys move_entities(position: mut Position, velocity: Velocity) {
    position.x += velocity.dx
    position.y += velocity.dy

    print(position.x)
    print(position.y)
}

sys entity_spawner() {
    let id = spawn {
        Position(0, 0),
        Velocity(1, 1)
    }
}

schedule {
    entity_spawner,
    move_entities
}
