/*
fn add(a: Int, b: Int) -> Int {
    a + b
}

fn main() {
    let a = 10 * 456
    print(a + 1)
    print("TEST")
    let b = add(1, 1)
    print(b)
}
main()
*/


/*
fn incr(a: &mut Int) {
    *a += 1
}

fn main() {
    let mut a = 1
    incr(&mut a)
    print(a)
}
main()
*/


fn main() {
    let mut a = 1
    print(a)
    a = a + 1
    print(a)
}
main()






// cascade
/*let b = 1
    add(1);
    add(1);
    yourself

let c = 1
    -> add(1)
    -> add(1)
    -> yourself

let d = 1
    <- add(1)
    <- add(1)
    <- yourself*/

// pipeline
/*let player =
  Entity()
  |> add(Position(10, 5))
  |> add(Health(100, 100))
  |> yourself*/
